{
	// Place your Giant.Web 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Giant Web List": {
		"scope": "javascript,typescript,vue",
		"prefix": "glist",
		"body": [
"<template>",
"  <a-card :bordered=\"false\">",
"    <div class=\"table-page-search-wrapper\">",
"      <a-form layout=\"inline\">",
"        <a-row :gutter=\"48\">",
"          <a-col :md=\"6\" :sm=\"24\">",
"            <a-form-item label=\"关键字\">",
"              <a-input v-model=\"queryParam.Keyword\" placeholder=\"关键字\" />",
"            </a-form-item>",
"          </a-col>",
"          <a-col :md=\"6\" :sm=\"24\">",
"            <span class=\"table-page-search-submitButtons\">",
"              <a-button type=\"primary\" v-action:Query @click=\"()=>{this.$$refs.table.refresh()}\">查询</a-button>",
"              <a-button style=\"margin-left: 8px\" @click=\"resetSearchForm()\">重置</a-button>",
"            </span>",
"          </a-col>",
"        </a-row>",
"      </a-form>",
"    </div>",
"",
"    <div class=\"table-operator\">",
"      <a-button type=\"primary\" v-action:Add icon=\"plus\" @click=\"handleAdd\">新建</a-button>",
"      <a-button type=\"primary\" v-action:Delete icon=\"delete\" @click=\"handleDelete()\">批量删除</a-button>",
"    </div>",
"",
"    <s-table ref=\"table\" size=\"default\" rowKey=\"Id\" :columns=\"columns\" :data=\"loadData\" :rowSelection=\"rowSelection\" showPagination=\"auto\">",
"      <span slot=\"ModifyTime\" slot-scope=\"text\">",
"        {{ moment(text).format(\"yyyy-MM-DD\") }}",
"      </span>",
"      <span slot=\"action\" slot-scope=\"text, record\">",
"        <template>",
"          <a v-action:Update @click=\"handleEdit(record)\">修改</a>",
"          <a-divider v-action:Delete type=\"vertical\" />",
"          <a v-action:Delete @click=\"handleDelete([record])\">删除</a>",
"        </template>",
"      </span>",
"    </s-table>",
"    <EditForm ref=\"editForm\" @Success=\"()=>{this.$$refs.table.refresh()}\"></EditForm>",
"  </a-card>",
"</template>",
"",
"<script>",
"import { mapGetters } from 'vuex'",
"import moment from 'moment'",
"import { STable } from '@/components'",
"import MainSvc from '@/api/${1|Bus,Inv,Bas,CF,Sys|}/${1|Bus,Inv,Bas,CF,Sys|}_$2Svc'",
"import EditForm from './Edit'",
"import EnumSelect from '@/components/CF/EnumSelect'",
"import EnumName from '@/components/CF/EnumName'",
"import StorerSelect from '@/components/Bas/StorerSelect'",
"import SkuSelect from '@/components/Bas/SkuSelect'",
"import LocSelect from '@/components/Bas/LocSelect'",
"",
"const columns = [",
"  { title: '编号', dataIndex: 'Code', sorter: true },",
"  { title: '名称', dataIndex: 'Name', sorter: true },",
"  { title: '修改时间', dataIndex: 'ModifyTime', sorter: true, scopedSlots: { customRender: 'ModifyTime' } },",
"  { title: '操作', dataIndex: 'action', width: '200px', scopedSlots: { customRender: 'action' } }",
"]",
"",
"export default {",
"  components: {",
"    STable,",
"    MainSvc,",
"    EnumSelect,",
"    EnumName,",
"    EditForm,",
"    StorerSelect,",
"    SkuSelect,",
"    LocSelect",
"  },",
"  data() {",
"    this.columns = columns",
"    return {",
"      // create model",
"      visible: false,",
"      confirmLoading: false,",
"      mdl: null,",
"      // 高级搜索 展开/关闭",
"      advanced: false,",
"      // 查询参数",
"      queryParam: { WhseId: '', Keyword: '' },",
"      // 加载数据方法 必须为 Promise 对象",
"      loadData: parameter => {",
"        this.queryParam.WhseId = this.defaultWhseId",
"        const requestParameters = Object.assign({ sortField: 'ModifyTime', sortOrder: 'desc', Search: { ...this.queryParam } }, parameter)",
"        console.log('loadData request parameters:', requestParameters)",
"        return MainSvc.GetPage(requestParameters)",
"      },",
"      selectedRowKeys: [],",
"      selectedRows: []",
"    }",
"  },",
"  filters: {",
"  },",
"  created() {},",
"  computed: {",
"    ...mapGetters({",
"      defaultWhseId: 'whseId',",
"      defaultStorerId: 'storerId'",
"    }),",
"    rowSelection() {",
"      return {",
"        selectedRowKeys: this.selectedRowKeys,",
"        onChange: this.onSelectChange",
"      }",
"    }",
"  },",
"  methods: {",
"    moment,",
"    handleAdd() {",
"      this.mdl = null",
"      this.visible = true",
"      this.$$refs.editForm.openForm(null, '新增')",
"    },",
"    handleEdit(record) {",
"      this.visible = true",
"      this.mdl = { ...record }",
"      this.$$refs.editForm.openForm(record.Id, '修改')",
"    },",
"    onSelectChange(selectedRowKeys, selectedRows) {",
"      this.selectedRowKeys = selectedRowKeys",
"      this.selectedRows = selectedRows",
"    },",
"    resetSearchForm() {",
"      this.queryParam = { WhseId: this.defaultWhseId, Keyword: '' }",
"    },",
"    handleDelete(rows) {",
"      var thisObj = this",
"      var ids = rows.map(value => value.Id)",
"      this.$$confirm({",
"        title: '确认删除吗?',",
"        onOk() {",
"          return new Promise((resolve, reject) => {",
"            MainSvc.Delete(ids).then(result => {",
"              resolve()",
"              if (result.Success) {",
"                thisObj.$$message.success('操作成功!')",
"                thisObj.$$refs.table.refresh()",
"              } else {",
"                thisObj.$$message.error(result.Msg)",
"              }",
"            })",
"          })",
"        }",
"      })",
"    }",
"  }",
"}",
"</script>",
""
		],
		"description": "Giant Web List"
	}
}